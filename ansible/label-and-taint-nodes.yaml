---
- name: Label and Taint Kubernetes Nodes
  hosts: localhost

  vars:
    ansible_hosts_path: "tmp/{{ cluster_name }}/ansible-hosts.txt"
    cluster_config: "{{ lookup('file', 'tmp/{{ cluster_name }}/cluster_config.json') | from_json }}"

  tasks:
    - name: Read Ansible Hosts File
      ansible.builtin.slurp:
        src: "{{ ansible_hosts_path }}"
      register: hosts_file_content

    - name: Convert Hosts File Content to String
      set_fact:
        hosts_content: "{{ hosts_file_content.content | b64decode }}"

    - name: Initialize an empty list for nodes, labels, and taints
      set_fact:
        nodes_labels_and_taints: []

    - name: Parse Nodes, Labels, and Taints
      set_fact:
        nodes_labels_and_taints: "{{ nodes_labels_and_taints + [{'hostname': item.split()[0], 'labels': (item.split('labels=\"')[1].split('\"')[0] if 'labels=\"' in item else '').split(','), 'taints': (item.split('taints=\"')[1].split('\"')[0] if 'taints=\"' in item else '').split(',') }] }}"
      loop: "{{ hosts_content.splitlines() }}"
      when: item | length > 0 and not item.startswith('#') and not 'labels=""' in item and not item.startswith('[') and not item.startswith('cluster_name=') and not item.startswith('ansible_python_interpreter=')

    - name: Apply Labels to Nodes
      ansible.builtin.command:
        cmd: "kubectl label nodes {{ item.0.hostname }} {{ item.1 }} --overwrite"
      with_subelements:
        - "{{ nodes_labels_and_taints }}"
        - labels
      loop_control:
        label: "{{ item.0.hostname }}:{{ item.1 }}"
      when: item.0.hostname not in groups['etcd']  # Skip if hostname is in etcd group
      ignore_errors: yes  # Handles cases where nodes aren't yet joined
      environment:
        KUBECONFIG: "{{ lookup('env', 'HOME') }}/.kube/{{ cluster_config.kubeconfig_file_name }}"

    - name: Apply Taints to Nodes
      ansible.builtin.command:
        cmd: "kubectl taint nodes {{ item.0.hostname }} {{ item.1 }} --overwrite"
      with_subelements:
        - "{{ nodes_labels_and_taints }}"
        - taints
      loop_control:
        label: "{{ item.0.hostname }}:{{ item.1 }}"
      when:
        - item.1 | length > 0  # Skip if taint is an empty string
        - item.0.hostname not in groups['etcd']  # Skip if hostname is in etcd group
      ignore_errors: yes  # Handles cases where nodes aren't yet joined
      environment:
        KUBECONFIG: "{{ lookup('env', 'HOME') }}/.kube/{{ cluster_config.kubeconfig_file_name }}"