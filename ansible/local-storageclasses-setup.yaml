- name: Deploy Local StorageClasses
  hosts: apiserver[0]
  gather_facts: false
  vars:
    cluster_config: "{{ lookup('file', 'tmp/{{ cluster_name }}/cluster_config.json') | from_json }}"
    default_storage_class_name: "local-path"
  tasks:
    - name: Generate Non-Auto-Provisioning Local StorageClass Yaml
      ansible.builtin.template:
        src: helpers/local_storageclass.yaml.j2
        dest: "/tmp/local_storageclass.yaml"

    - name: Create Non-Auto-Provisioning Local StorageClass
      ansible.builtin.command:
        cmd: kubectl apply -f /tmp/local_storageclass.yaml

    - name: Create Auto-Provisioning Local StorageClass
      ansible.builtin.command:
        cmd: kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v{{ local_path_provisioner_version }}/deploy/local-path-storage.yaml

    - name: Check if a default storage class exists by parsing kubectl output
      ansible.builtin.command:
        cmd: kubectl get storageclass
      register: storageclass_output

    - name: Set default_storage_class_exists based on storageclass output
      set_fact:
        default_storage_class_exists: "{{ storageclass_output.stdout_lines | select('search', '\\(default\\)') | list | length > 0 }}"

    - name: Set default storage class (if none exists)
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: storage.k8s.io/v1
          kind: StorageClass
          metadata:
            name: "{{ default_storage_class_name }}"
            annotations:
              storageclass.kubernetes.io/is-default-class: "true"
      when: not default_storage_class_exists