---
# Mirrors sections of apt-packages.sh that consume a version number
- name: Upgrade Kubernetes Packages
  hosts: all
  become: true
  any_errors_fatal: true

  tasks:
    - name: End playbook for etcd hosts
      ansible.builtin.meta: end_host
      when: "'etcd' in groups and 'etcd' in group_names"

    - name: Create directory for apt keyrings
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Install GPG if not installed
      ansible.builtin.apt:
        name: gpg
        state: present
        update_cache: true

    - name: Remove old Kubernetes apt key and sources list
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        - /etc/apt/sources.list.d/kubernetes.list

    - name: Add Kubernetes apt repository key
      ansible.builtin.shell: |
        curl -fsSL "https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_short_version }}/deb/Release.key" |
        gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      args:
        creates: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes apt repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ kubernetes_short_version }}/deb/ /"
        state: present
        filename: "kubernetes"

    - name: Unhold kubelet, kubeadm, kubectl, helm, and containerd packages (Ubuntu)
      ansible.builtin.command: "sudo apt-mark unhold {{ item }}"
      loop:
        - kubelet
        - kubeadm
        - kubectl
        - helm
        - containerd
      register: unhold_result
      until: unhold_result is succeeded
      when: ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution'] == 'Ubuntu'

    - name: Unhold kubelet, kubeadm, kubectl, helm, and containerd packages (Debian)
      ansible.builtin.command: "sudo apt-mark unhold {{ item }}"
      loop:
        - kubelet
        - kubeadm
        - kubectl
        - helm
        - containerd.io
      register: unhold_result
      until: unhold_result is succeeded
      when: ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution'] == 'Debian'

    - name: Update package list
      ansible.builtin.apt:
        update_cache: yes

    - name: Install specific versions of kubelet, kubeadm, kubectl, helm, and containerd on Ubuntu
      ansible.builtin.apt:
        name:
          - "kubelet={{ kubernetes_long_version }}"
          - "kubeadm={{ kubernetes_long_version }}"
          - "kubectl={{ kubernetes_long_version }}"
          - "helm={{ helm_version }}"
          - "containerd={{ containerd_version }}"
        state: present
      when: ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution'] == 'Ubuntu'

    - name: Install specific versions of kubelet, kubeadm, kubectl, helm, and containerd.io on Debian
      ansible.builtin.apt:
        name:
          - "kubelet={{ kubernetes_long_version }}"
          - "kubeadm={{ kubernetes_long_version }}"
          - "kubectl={{ kubernetes_long_version }}"
          - "helm={{ helm_version }}"
          - "containerd.io={{ containerd_version }}"
        state: present
      when: ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution'] == 'Debian'

    - name: Hold kubelet, kubeadm, kubectl, helm, and containerd packages (Ubuntu)
      ansible.builtin.command: "sudo apt-mark hold {{ item }}"
      loop:
        - kubelet
        - kubeadm
        - kubectl
        - helm
        - containerd
      register: hold_result
      until: hold_result is succeeded
      when: ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution'] == 'Ubuntu'

    - name: Hold kubelet, kubeadm, kubectl, helm, and containerd packages (Debian)
      ansible.builtin.command: "sudo apt-mark hold {{ item }}"
      loop:
        - kubelet
        - kubeadm
        - kubectl
        - helm
        - containerd.io
      register: hold_result
      until: hold_result is succeeded
      when: ansible_facts['os_family'] == 'Debian' and ansible_facts['distribution'] == 'Debian'

    - name: Upgrade Kubeadm
      ansible.builtin.shell:
        cmd: >
          kubeadm upgrade node
      ignore_errors: true

    - name: Reload systemd daemon
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Restart kubelet service
      ansible.builtin.systemd:
        name: kubelet
        state: restarted
