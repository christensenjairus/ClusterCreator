---
- name: Decoupled Etcdctl healthcheck
  hosts: localhost  # Use localhost to manage the health check logic
  any_errors_fatal: true
  gather_facts: false
  become: true
  tags:
    - etcd_healthcheck
  tasks:
    - name: Ensure etcd group exists
      ansible.builtin.set_fact:
        etcd_group_exists: "{{ 'etcd' in groups }}"
      run_once: true

    - name: Set first etcd node
      ansible.builtin.set_fact:
        first_etcd_node: "{{ groups['etcd'][0] if etcd_group_exists else None }}"
      when: etcd_group_exists
      run_once: true

    - name: Check health for the first etcd endpoint
      ansible.builtin.shell: |
        ETCDCTL_API=3 etcdctl \
        --cert /etc/kubernetes/pki/etcd/peer.crt \
        --key /etc/kubernetes/pki/etcd/peer.key \
        --cacert /etc/kubernetes/pki/etcd/ca.crt \
        --endpoints https://{{ first_etcd_node }}:2379 endpoint health
      register: etcd_health_check
      ignore_errors: yes
      when: etcd_group_exists and first_etcd_node is not none

    - name: Show etcd health check output
      ansible.builtin.debug:
        msg: "{{ etcd_health_check.stdout }}"
      when: etcd_group_exists and first_etcd_node is not none and etcd_health_check is defined

- name: Show connected k8s nodes
  hosts: apiserver[0]
  gather_facts: false
  tasks:
    - name: Get connected k8s nodes
      ansible.builtin.command:
        cmd: kubectl get nodes
      register: kubectl_output
    - name: Display connected k8s nodes
      ansible.builtin.debug:
        var: kubectl_output.stdout_lines