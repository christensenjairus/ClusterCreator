---
- name: Update SSH keys in known_hosts file for all inventory hosts
  hosts: localhost
  gather_facts: false
  any_errors_fatal: true
  vars:
    cluster_config: "{{ lookup('file', 'tmp/{{ cluster_name }}/cluster_config.json') | from_json }}"
    ssh_hosts_file: "{{ lookup('env', 'HOME') }}/.ssh/known_hosts"

  tasks:
    - name: Iterate through all inventory hosts to update SSH keys
      block:
        - name: Remove old SSH key for the host from known_hosts
          ansible.builtin.lineinfile:
            path: "{{ ssh_hosts_file }}"
            regexp: '^\[?{{ item }}\]?:'
            state: absent
          loop: "{{ groups['all'] }}"
          check_mode: no
          become: no

        - name: Fetch new SSH key for the host
          ansible.builtin.shell:
            cmd: "ssh-keyscan -t {{ cluster_config.ssh.ssh_key_type }} {{ hostvars[item].ansible_host }}"
          register: ssh_key
          loop: "{{ groups['all'] }}"
          check_mode: no
          become: no
          ignore_errors: true

        - name: Add new SSH keys to personal known_hosts
          ansible.builtin.lineinfile:
            path: "{{ ssh_hosts_file }}"
            line: "{{ item.stdout }}"
            state: present
          loop: "{{ ssh_key.results }}"
          when: item.stdout != "" and item.rc == 0

- name: Copy SSH public key to all nodes and add to authorized_keys
  hosts: all
  become: yes
  gather_facts: false
  vars:
    cluster_config: "{{ lookup('file', 'tmp/{{ cluster_name }}/cluster_config.json') | from_json }}"
    ssh_public_key: "{{ lookup('file', '/root/.ssh/ssh_key.pub') }}"  # Assign var from a public key content

  tasks:
    - name: Ensure .ssh directory exists
      ansible.builtin.file:
        path: /home/{{ cluster_config.ssh.ssh_user }}/.ssh
        state: directory
        mode: '0700'
        owner: "{{ cluster_config.ssh.ssh_user }}"
        group: "{{ cluster_config.ssh.ssh_user }}"

    - name: Copy public key to remote host
      ansible.builtin.copy:
        src: /root/.ssh/ssh_key.pub  # A public key path on the ansible host
        dest: /home/{{ cluster_config.ssh.ssh_user }}/.ssh/ssh_key.pub
        owner: "{{ cluster_config.ssh.ssh_user }}"
        group: "{{ cluster_config.ssh.ssh_user }}"
        mode: '0644'

    - name: Add public key to authorized_keys
      ansible.builtin.lineinfile:
        path: /home/{{ cluster_config.ssh.ssh_user }}/.ssh/authorized_keys
        line: "{{ ssh_public_key }}"  # Using var with a public key content
        create: yes
        mode: '0600'
        owner: "{{ cluster_config.ssh.ssh_user }}"
        group: "{{ cluster_config.ssh.ssh_user }}"
